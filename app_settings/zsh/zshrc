export ZSH=$HOME/.oh-my-zsh
ZSH_THEME="avit"
ENABLE_CORRECTION="true"
plugins=(git rails ruby brew gem osx docker notify pip wd)

source $ZSH/oh-my-zsh.sh

eval $(thefuck --alias)

alias update-all="brew update && brew upgrade && brew cleanup && brew cu -ay && brew cask cleanup && apm update && apm upgrade && softwareupdate -ia"
alias update-dns="sudo killall -HUP mDNSResponder"
alias update-conf="cp /keybase/private/pierreem/ssh_conf/* ~/.ssh"

alias rm="trash"
alias resource="source ~/.zshrc"
alias ip="curl -4 icanhazip.com && curl -6 icanhazip.com"
alias review="merge --no-ff --no-commit"

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
alias rs="rails server -b 0.0.0.0"
alias rs-sync="bundle exec rake browser_sync:start"

export PATH="/usr/local/opt/imagemagick@6/bin:$PATH"

zstyle ':notify:*' error-icon "https://media3.giphy.com/media/10ECejNtM1GyRy/200_s.gif"
zstyle ':notify:*' error-title "wow such #fail"
zstyle ':notify:*' error-sound "Glass"
zstyle ':notify:*' success-icon "https://s-media-cache-ak0.pinimg.com/564x/b5/5a/18/b55a1805f5650495a74202279036ecd2.jpg"
zstyle ':notify:*' success-title "very #success. wow"
zstyle ':notify:*' success-sound "default"
zstyle ':notify:*' activate-terminal yes
zstyle ':notify:*' command-complete-timeout 15

PATH="$HOME/.fastlane/bin:$PATH"

alias ddiff="git difftool -d --no-symlink $1 $2"
alias brake='bundle exec rake "$@"'
alias brails='bundle exec rails "$@"'
alias commit='git commit "$@"'
alias status='git status "$@"'
alias add='git add "$@"'
alias stash='git stash "$@"'
alias pull='git pull "$@"'
alias push='git push "$@"'
alias merge='git merge "$@"'
alias checkout='git checkout "$@"'
function mcd() {
  mkdir -p "$1" && cd "$1";
}
alias deploy='rm -rf app/build/outputs/apk/debug ; bundle exec fastlane deploy'
alias lf='ls -Gl | grep ^d' #Only list directories
alias lsd='ls -Gal | grep ^d' #Only list directories, including hidden ones
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias ......='cd ../../../../../'
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'''
alias rr='rm -rf'

# #build android part
# # mount the android file image
# function mountAndroid { hdiutil attach ~/android.dmg.sparseimage -mountpoint /Volumes/android; }
# # unmount the android file image
# function umountAndroid() { hdiutil detach /Volumes/android; }
# # set the number of open files to be 1024
# ulimit -S -n 1024
# #to load repo
# export PATH=~/bin:$PATH
# #use ccache to speedup rebuild
# export USE_CCACHE=1

# export PATH="/usr/local/opt/postgresql@9.6/bin:$PATH"
# export PATH="/usr/local/opt/imagemagick/bin:$PATH"
# export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/opt/imagemagick/lib/pkgconfig"
# export LDFLAGS="$LDFLAGS:-L/usr/local/opt/imagemagick/lib"
# export CPPFLAGS="$CPPFLAGS:-L/usr/local/opt/imagemagick/include"

##conf find after executing brew info [openssl|readline]
#add openssl and readline from homebrew
# export PATH="/usr/local/opt/openssl/bin:$PATH"
# #For compilers to find openssl you may need to set:
# export LDFLAGS="-L/usr/local/opt/openssl/lib"
# export CPPFLAGS="-I/usr/local/opt/openssl/include"
# export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/
# #For pkg-config to find openssl you may need to set:
# export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig"
# #For compilers to find readline you may need to set:
# export LDFLAGS="-L/usr/local/opt/readline/lib"
# export CPPFLAGS="-I/usr/local/opt/readline/include"
# #For pkg-config to find readline you may need to set:
# export PKG_CONFIG_PATH="/usr/local/opt/readline/lib/pkgconfig"

export PATH="$PATH:/Users/spe/flutter/bin"

alias dbuild="docker build -f backend/Dockerfile . -t backend"
alias drun="apres docker run -tid backend -v $PWD:/ -p 80:8000"

export ANDROID_SDK_ROOT=/usr/local/share/android-sdk
export ANDROID_HOME=/usr/local/share/android-sdk/
export ANDROID_NDK_HOME=/usr/local/share/android-ndk
